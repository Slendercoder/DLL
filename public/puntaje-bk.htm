<!doctype html>
  <head>
    <script type="text/javascript" src="js/raphael.js"></script>
    <title>Puntaje</title>
  </head>
<link rel="stylesheet" href="/lib/bootstrap/bootstrap.min.css" />
<body>
<style>

</style>
  <div id="container" style="margin: 0 auto; max-width: 640px">
    <h1>Puntaje acumulado</h1>
    <div id="puntAcum">
      <br>
        <h3> Su desempeño ha sido así:</h3>
        <span id="canvas_container1"></span>
    </div>
    <br>
    <button class="button1" id='continuar'>Continuar</button>
  </div>
</body>

  <script type="text/javascript">


    window.onload = function() {

        console.log('Typeof', typeof window.paper);
        if ('undefined' !== typeof window.paper) return;
        var node = parent.node;
        var me = node.player.id; // My id.

        var auxiliar = node.game.puntajeAcumulado;
        console.log('Puntaje acumulado', auxiliar);

        
        // Create the square for the locations and score using RAPHAEL.JS
        console.log('Raphael intenta crear paper1...');
        var paper1 = new Raphael(document.getElementById('canvas_container1'), 500, 140);
        console.log('...Raphael logra crear paper1');

        window.drawScore = function(msg) {
            // Clear whatever is in there.
            console.log('Raphael intenta limpiar lo que hay en paper1...')
            paper1.clear();
            console.log('...Raphael logra limpiar lo que hay en paper1')
            
            console.log('Puntaje', msg);
            
            var cantidadRondas = Object.keys(msg).length;
            console.log('cantidadRondas', cantidadRondas);
            
            var puntajes = [];
            puntajes.push(0);
            for (var i=1; i < cantidadRondas + 1; i++) {
                puntajes.push(msg[i]);
            }
            console.log('Puntajes', puntajes);


            // Divide rectangle according to data
            var minimo = Math.min.apply(Math, puntajes);
            var maximo = Math.max.apply(Math, puntajes);
            console.log('min', minimo, 'max', maximo);
            
            var ancho = 480 / (puntajes.length - 1);
            console.log('ancho', ancho);
            var alto;
            // String to define path
            var camino = 'M20 ';
            if (minimo < 0) {
                alto = 100 / (maximo - minimo);
                // Add coordinate for (0, 0)
                camino = camino + (maximo * alto + 10) + ' ';
            } else if (maximo == 0) {
                alto = 100;
                // Add coordinate for (0, 0)
                camino = camino + '60 ';                
            } else {
                alto = 100 / maximo;
                // Add coordinate for (0, 0)
                camino = camino + '110 ';
            }
            console.log('alto', alto);
            
            
            // I  first need to construe the inverse path
            // in order to cheat Raphael's path-construction into
            // making a line.
            var camino_inverso = '';

            // Construct string to define paths
            for (var i = 1; i < puntajes.length; i++) {
                camino = camino + 'L' + (i * ancho + 20) + ' ';
                if (maximo == 0) {
                    camino = camino + '60 ';
                    camino_inverso = '60 ' + camino_inverso;                
                }
                else {
                    camino = camino + ((maximo - puntajes[i]) * alto + 10) + ' ';
                    camino_inverso = ((maximo - puntajes[i]) * alto + 10) + ' ' + camino_inverso;
                }
                camino_inverso = 'L' + (i * ancho + 20) + ' ' + camino_inverso;
            }
            console.log('camino', camino);
            console.log('camino_inverso', camino_inverso);

            // debugger

            paper1.rect(20, 10, 480, 100);
            paper1.text(-10, 60, 'Puntaje')
                .attr({'text-anchor': 'start', 'font-size': 10})
                .transform('r270');
            //                  paper1.text(240, 120, camino)
            paper1.text(240, 120, 'Rondas')
                .attr({'text-anchor': 'start', 'font-size': 10});
            paper1.path(camino + ' ' + camino_inverso).attr({stroke: "blue"});

        };

        console.log('Se llama la funcion de mostrar el puntaje...')
        // Dibuja el puntaje acumulado
        node.events.game.on('DrawScore', window.drawScore); // end node.on 'DrawScore'

    } // end onload function
  </script>